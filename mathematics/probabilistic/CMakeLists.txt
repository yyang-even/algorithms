add_library(probabilistic
    random_number_generator_in_arbitrary_probability.cpp)

CompileBenchmarkExe(approximate_median)
CompileTestExe(approximate_median)

CompileBenchmarkExe(birthday_paradox)
CompileTestExe(birthday_paradox)

CompileBenchmarkExe(equal_probability_random_number)
CompileTestExe(equal_probability_random_number)

CompileBenchmarkExe(fair_coin_from_biased_coin
    probabilistic)
CompileTestExe(fair_coin_from_biased_coin
    probabilistic)

CompileBenchmarkExe(generate_0_1_25_75_probability)
CompileTestExe(generate_0_1_25_75_probability)

CompileBenchmarkExe(probability_K_in_array)
CompileTestExe(probability_K_in_array)

CompileBenchmarkExe(random_number_generator_in_arbitrary_probability)
CompileTestExe(random_number_generator_in_arbitrary_probability)

CompileBenchmarkExe(reservoir_sampling)
CompileTerminalApp(reservoir_sampling)

CompileBenchmarkExe(shuffle_array)
CompileTerminalApp(shuffle_array)

CompileBenchmarkExe(strong_password_suggester)
CompileTestExe(strong_password_suggester)
CompileTerminalApp(strong_password_suggester)
